#!/usr/bin/env python3

#hkpac - Gestor de paquetes para el repositorio Hacking-Utils.
#Escrito por Darth Venom y Tobi Emotic.
#< = >

import sys;
import os;
import json;

# Definición de la función main(). En Python esta función no es necesaria.

def main():
#    pcd = os.getcwd()          //descartar
#    pcd = '/usr/local/bin'
    F=None
    if os.system('uname -a | grep Android &> /dev/null') == 0:
        termux=True
    else:
        termux=False
    if not termux:
        os.chdir('/etc')
    else:
        os.chdir('/data/data/com.termux/files/home/')
    if len(sys.argv) == 1:
        print("error: No se ha especificado una operacion")
        exit(1)
        ###################################Chequeo de configuración#################################

    if 'hkpac.conf' in os.listdir():
        con=open('hkpac.conf','r')
        conf=json.load(con)
        del(con)
        instdir=conf['conf'][0]['install dir']
#        termux=conf['conf'][0]['Termux']               //Ajuste descartado
    else:
        if os.system('uname -a | grep Android &> /dev/null') == 0:
            termux=True
            instdir='/data/data/com.termux/files/usr/bin'

        else:
            termux=False
            instdir='/usr/local/bin'

    x=1
    op="null"
    for i in sys.argv:

        ############################################################################################
        #######################################Selección de operación###############################

        if op == "null":

            if sys.argv[x] == "install":
                op="install"
                x+=1
                continue
            elif sys.argv[x] == "search":
                op="search"
                x+=1
                continue
            elif sys.argv[x] == "remove":
                op="remove"
                x+=1
                continue
            elif sys.argv[x] == "removeconf":
                op="rmconf"
                x+=1
                continue
            elif sys.argv[x] == "rmwconf":
                op="rmwconf"
                x+=1
                continue
            elif sys.argv[x] == "config":
                op="config"
                x+=1
                continue
            else:
                print("hkpac: Opción invalida - " + sys.argv[x])
                exit(1)

        #############################################################################################
        ######################################Operación install######################################

        elif op == "install":

            if len(sys.argv)-1 < x:
                print('error: No se ha especificado un objetivo.')
                exit(1)
            if len(sys.argv[x]) == 0:
                print('error: No se ha especificado un objetivo.')
                exit(1)
            if F == None:
                if not 'hkpac.json' in os.listdir():
                    print('Faltan los datos de hkpac. Ejecute \'hkpac update\'')
                    exit(1)
                with open('hkpac.json') as F:
                    hkpac = json.load(F)
            if sys.argv[x] in hkpac['packs'][0]:
                os.chdir(instdir)
                os.system('wget https://raw.githubusercontent.com/VENOM-InstantDeath/hkprogs/master/' + hkpac['packs'][0][sys.argv[x]]['local'] + sys.argv[x])
                os.system('chmod +x ' + sys.argv[x])
                if not termux:
                    os.chdir('/etc')
                else:
                    os.chdir('/data/data/com.termux/files/home/')
                if x+1 > len(sys.argv)-1:
                    exit()
                else:
                    x+=1
                    continue
            else:
                print('error: Objetivo no encontrado: ' + sys.argv[x])
                exit()
        ##############################################################################################
        ######################################Operación config########################################

        elif op == "config":
            
            if len(sys.argv)-1 < x:
                print('error: No se ha especificado un ajuste.')
                exit(1)
            if len(sys.argv[x]) == 0:
                print('error: No se ha especificado un ajuste.')
                exit(1)
            if sys.argv[x] == 'instdir':
                x+=1

                if len(sys.argv)-1 < x:
                    print('error: No se ha especificado el valor.')
                    exit(1)
                if len(sys.argv[x]) == 0:
                    print('error: No se ha especificado el valor.')
                    exit(1)

                if sys.argv[x] == 'show':
                    print(instdir)
                    exit()
                if sys.argv[x] == 'default':

                    if not termux:
                        os.chdir('/etc')
                    else:
                        os.chdir('/data/data/com.termux/files/home')
                    if not 'hkpac.conf' in os.listdir():
                        F=open('hkpac.conf','w+')
                    else:
                        F=open('hkpac.conf','w')
                    conf['conf'][0]["install dir"] = '/usr/local/bin'
                    F.write(json.dumps(conf,indent=4))
                    F.seek(0)
                    F.close()
                    print('Instdir cambiado a ' + '/usr/local/bin')
                    exit()

                try:
                    os.chdir(sys.argv[x])
                except FileNotFoundError:
                    print('error: El directorio especificado no existe.')
                    exit(1)
                if not termux:
                    os.chdir('/etc')
                else:
                    os.chdir('/data/data/com.termux/files/home/')
                if not 'hkpac.conf' in os.listdir():
                    F=open('hkpac.conf','w+')
                else:
                    F=open('hkpac.conf','w')
                conf['conf'][0]["install dir"] = sys.argv[x]
                F.write(json.dumps(conf,indent=4))
                F.seek(0)
                F.close()
                print('Instdir cambiado a ' + sys.argv[x])
                exit()
            else:
                print('error: El ajuste especificado no existe.')
                exit(1)

        ##############################################################################################
        ###################################Operación remove###########################################

        elif op == "remove":

            if len(sys.argv)-1 < x:
                print('error: No se ha especificado un objetivo.')
                exit(1)
            if len(sys.argv[x]) == 0:
                print('error: No se ha especificado un objetivo.')
                exit(1)
            if F == None:
                if not 'hkpac.json' in os.listdir():
                    print('Faltan los datos de hkpac. Ejecute \'hkpac update\'')
                    exit(1)
                with open('hkpac.json') as F:
                    hkpac = json.load(F)
            if sys.argv[x] in hkpac['packs'][0]:
                os.chdir(instdir)
                os.remove(sys.argv[x])
                print(sys.argv[x] + ' se ha removido.')
                if x+1 > len(sys.argv)-1:
                    exit()
                else:
                    x+=1
                    continue
            else:
                print('error: Objetivo no encontrado: ' + sys.argv[x])
                exit(1)




# if que comprueba si el ejecutor del programa es el programa en sí o si está siendo ejecutado como módulo o desde otro programa. Si el código está siendo ejecutado por el propio programa, entonces se ejecuta el interior del if (ingresando a la función main()).

if __name__ == '__main__':

    #llamada a la función main()
    main();
